set {
    $term foot
    # $term ghostty
    # size is chosen s.t. nvim buffer is 80x24
    $term_float foot -a foot-float -W 88x28
    # $term_float ghostty --window-width=88 --window-height=28 --class=ghostty.float
    $menu bemenu -i --fn "Hack Nerd Font 16" -l 5
    $bookdir ~/books
    $books pkill bemenu || swaymsg exec "echo \"$(cd $bookdir && fd -t f | $menu -p read -l 20)\" | xargs -rI{} zathura '$bookdir/{}'"
    $drun pkill bemenu || swaymsg exec "$(j4-dmenu-desktop -d '$menu -p drun' -t $term -x --no-generic)"
    $todo_add pkill bemenu || swaymsg exec "$(echo '' | $menu -p task -l 0 | xargs -I{} todo add "{}")"
    $todo_done pkill bemenu || swaymsg exec "$(todo ls | tac | $menu -p done | sed 's/^\s*//' | cut -d ' ' -f 1 | xargs todo rm)"
    $lock loginctl lock-session

    # notifications {{{1
    $invoke_notificiation "makoctl invoke"
    $dismiss_notification "makoctl dismiss"
    $dismiss_all_notifications "makoctl dismiss --all"

    # screenshots {{{1
    # click to select a window, drag to select a region
    # WARN crazy magic
    $screenshot_mouse swaymsg -t get_tree \
    | jq -r '.. | (.nodes? // empty)[] | select(.pid and .visible) | .rect | "\(.x),\(.y) \(.width)x\(.height)"' \
    | slurp | xargs -I {} grim -g "{}" - | swappy -f -
    $screenshot_focused_window swaymsg -t get_tree \
    | jq -r '.. | (.nodes? // empty)[] | select(.focused) | .rect | "\(.x),\(.y) \(.width)x\(.height)"' \
    | xargs -I {} grim -g "{}" - | swappy -f -
    $screenshot_all_outputs grim - | swappy -f -
    $screenshot_focused_output grim -o $(swaymsg -t get_outputs | jq -r '.[] | select(.focused) | .name') - | swappy -f -

    $screencast_mouse swaymsg -t get_tree \
    | jq -r '.. | (.nodes? // empty)[] | select(.pid and .visible) | .rect | "\(.x),\(.y) \(.width)x\(.height)"' \
    | slurp | xargs -I {} wf-recorder -g "{}" -f "~/vid/screen/$(date +%Y-%m-%d_%H-%M-%S).mp4"
    $screencat_stop killall wf-recorder
    # special keys {{{1
    $brightness_up lightctl up
    $brightness_down lightctl down

    $sound_up volumectl -u up
    $sound_down volumectl -u down
    $mute_sound volumectl toggle-mute
    $mute_mic volumectl -m toggle-mute

    $audio_prev playerctl -p spotify previous
    $audio_next playerctl -p spotify next
    $audio_play_pause playerctl -p spotify play-pause
    $audio_stop playerctl -p spotify stop

    $wlan_toggle wifi toggle
    $bluetooth_toggle bluetooth toggle
    # }}}
}

# vim: ft=swayconfig fdm=marker fdl=0
